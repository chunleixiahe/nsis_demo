; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "美联美容连锁软件"
!define PRODUCT_VERSION "2012"
!define PRODUCT_PUBLISHER "北京和展科技有限责任公司"
!define PRODUCT_WEB_SITE "http://www.comdev.cn"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"  ;HKEY_LOCAL_MACHINE   HKLM是简写


; MUI 1.67 compatible ------
!include "MUI.nsh"
!include "OLEDB.NSH"
!include "dialog_header_defines.nsh"

; MUI Settings
;!define MUI_INSTALL_DIR "C:\hzsoft"  ;为什么不能用$PROGRAMFILES；因为C:\Program Files含有空格;暂时用这个。
!define MUI_ABORTWARNING
!define MUI_ICON "c:\AppDisk\EIS\CONFIG\sys.ico"
!define MUI_UNICON "c:\AppDisk\EIS\CONFIG\sys.ico"
!define MUI_WELCOMEPAGE_TITLE "\r\n 美联 V2012"
!define MUI_WELCOMEPAGE_TEXT "  美联 V2012（以下简称KMS-2010）是北京和展科技有限责任公司推出的xxxx解决方案。\r\n\r\n  xxx。\r\n技术先进、操作简便。\r\n\r\n　　$_CLICK"
!define MUI_FINISHPAGE_TEXT "安装成功！\r\n欢迎使用！$_CLICK"


; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!insertmacro MUI_PAGE_LICENSE "c:\AppDisk\EIS\CONFIG\License.txt"
; Directory page
!insertmacro MUI_PAGE_DIRECTORY
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "SimpChinese"

; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "美联_Setup.exe"
InstallDir "$PROGRAMFILES\meilian\"
ShowInstDetails show
ShowUnInstDetails show





Section "tomcat" SEC02
  SetOutPath "$INSTDIR\tomcat\"
  SetOverwrite ifnewer

  SetOverwrite on
  ;安装tomcat根目录下的普通文件
  File "c:\AppDisk\EIS\tomcat\*.*"

  ;安装tomcat的公共目录
  SetOutPath "$INSTDIR\tomcat\"
  SetOverwrite on
  File /r "c:\AppDisk\EIS\tomcat\*.*"
  
  ;复制javarebel.jar到c盘根目录
  SetOutPath "c:\"  ;catalina中是写死的,因为catalina中写中文或者括号不行
  SetOverwrite on
  File "c:\AppDisk\EIS\tomcat\lib\javarebel.jar"


  ;安装tomcat服务
  ;SetOutPath "$INSTDIR\tomcat\bin"

	;不要安装服务
	;ExecWait 'service.bat  install  hztomcat "$INSTDIR\jdk"' $0

  ;设置服务成自启动;不要自动启动
  ;WriteRegDWORD HKLM "SYSTEM\CurrentControlSet\Services\hztomcat" "Start" 0x2

SectionEnd





; get_ip example
; by Hendri Adriaens
; HendriAdriaens@hotmail.com
;
; Usage:
; ip::get_ip
; Output: 'ip1;ip2;ip3;ip4;'
; (semi-colon delimited IP's list, on stack)
;
; Uses NSIS script to retrieve
; separate IP-addresses and to
; test whether or not it is an
; internet IP-address. Based on
; information by Joost Verburg:
;   These ranges are for local networks:
;   10.x.x.x / 255.0.0.0
;   172.16.x.x / 255.255.0.0 to 172.31.x.x / 255.255.0.0
;   192.168.x.x / 255.255.255.0
;   169.254.x.x / 255.255.0.0
; and:
;   169.254.x.x is an Automatic Private IP Address,
;   which you get when there is no DHCP server available,
;   for example, Windows gives these addresses when you check
;   "Obtain an IP address automatically" and you have no DHCP server.
;
; Further information has also been found at:
; http://home.t-online.de/home/TschiTschi/ip_adressierung.htm
;
; Script supplies two funcions:
; GetNextIp : get any IP (network and internet)
; CheckIP   : determine IP type (see function header for available types)
; Script uses the VersionCheck
; function to test IP's.


Section "getIP"
  ; Code to use actual ExtensionDLL
  ; Current script provides an example

  ip::get_ip
  Pop $0

  ; test entry
  ;StrCpy $0 '192.168.0.100;127.0.0.1;152.168.0.101;169.254.0.1;'
  StrCpy $R2 "127.0.0.1"
  Loop:
  Push $0
  Call GetNextIp
  Call CheckIp
  Pop $2 ; Type of current IP-address
  Pop $1 ; Current IP-address
  Pop $0 ; Remaining addresses
  StrCmp $2 '1' '' NoLoopBackIp
    ;MessageBox MB_OK "LoopBack IP-address: $1"
    Goto Continue
  NoLoopBackIp:
  StrCmp $2 '2' '' NoAPA
    ;MessageBox MB_OK "Automatic Private IP-address: $1"
    Goto Continue
  NoAPA:
  StrCmp $2 '3' '' NoLanIp
    ;MessageBox MB_OK "Network IP-address: $1" ;取得一个局域网ip即可
    StrCpy $R2 $1
    Goto ExitLoop
  NoLanIp:
  ;MessageBox MB_OK "Internet IP-address: $1"
  Continue:
  StrCmp $0 '' ExitLoop Loop
  ExitLoop:
SectionEnd

; Function GetNextIp
; input: head of stack
; format: 'ip1;ip2;ip3;ip4;'
; output: 'ip1' head of stack
;         'ip2;ip3;ip4;' second entry of stack

Function GetNextIp
  Exch $0
  Push $1
  Push $2
  Strcpy $2 0             ; Counter
  Loop:
    IntOp $2 $2 + 1
    StrCpy $1 $0 1 $2
    StrCmp $1 '' ExitLoop
    StrCmp $1 ';' '' Loop
    StrCpy $1 $0 $2       ; IP-address
    IntOp $2 $2 + 1
    StrCpy $0 $0 '' $2    ; Remaining string
  ExitLoop:
  Pop $2
  Push $0
  Exch 2
  Pop $0
  Exch $1
FunctionEnd

; Function CheckIP
; input: IP-address on stack
; output: additional entry on stack
;         1 - LoopBack IP (localhost, indicates no connection to a LAN or to the internet).
;         2 - Automatic Private IP Address (no DHCP server).
;         3 - Network IP.
;         4 - Internet IP.
; Eg:
; Push '192.168.0.100'
; Call CheckIP
; Pop $0 ; Contains '3'
; Pop $1 ; Contains '192.168.0.100'

Function CheckIP
  Exch $0
  Push $1

  ; Check 127.x.x.x
  Push '127.0.0.0'
  Push $0
  Call VersionCheck
  Pop $1
  StrCmp $1 2 '' Range1     ; IP cannot be in range of LoopBack addresses
  Push '127.255.255.255'
  Push $0
  Call VersionCheck
  Pop $1
  StrCmp $1 1 LoopBack      ; We found a LoopBack IP

  ; Check 10.x.x.x
  Range1:
  Push '10.0.0.0'
  Push $0
  Call VersionCheck
  Pop $1
  StrCmp $1 2 '' Range2     ; IP cannot be in range 1
  Push '10.255.255.255'
  Push $0
  Call VersionCheck
  Pop $1
  StrCmp $1 1 LanIp         ; We found a LanIp

  ; Check 172.16.x.x to 172.31.x.x
  Range2:
  Push '172.16.0.0'
  Push $0
  Call VersionCheck
  Pop $1
  StrCmp $1 2 '' Range3     ; IP cannot be in range 2
  Push '172.31.255.255'
  Push $0
  Call VersionCheck
  Pop $1
  StrCmp $1 1 LanIp         ; We found a LanIp

  ; Check 192.168.x.x
  Range3:
  Push '192.168.0.0'
  Push $0
  Call VersionCheck
  Pop $1
  StrCmp $1 2 '' Range4     ; IP cannot be in range 3
  Push '192.168.255.255'
  Push $0
  Call VersionCheck
  Pop $1
  StrCmp $1 1 LanIp         ; We found a LanIp

  ; Check 169.254.x.x
  Range4:
  Push '169.254.0.0'
  Push $0
  Call VersionCheck
  Pop $1
  StrCmp $1 2 '' InternetIp ; It should be an internet IP
  Push '169.254.255.255'
  Push $0
  Call VersionCheck
  Pop $1
  StrCmp $1 1 APA           ; We found an Automatic Private IP Address

  Goto InternetIp           ; Remaining addresses are internet IPs

  LoopBack:
  StrCpy $1 1
  Goto Exit

  APA:
  StrCpy $1 2
  Goto Exit

  LanIp:
  StrCpy $1 3
  Goto Exit

  InternetIp:
  StrCpy $1 4

  Exit:
  Exch $1
  Exch 1
  Exch $0
  Exch 1
FunctionEnd

; Function VersionCheck
; input: 'v1', 'v2' on stack
; output 1 - if number 1 is newer
;        2 - if number 2 is newer
;        0 - if it is the same verion
; Eg:
; Push '3.5.1.4'
; Push '3.5'
; Call VersionCheck
; Pop $0 ; now contains 1

Function VersionCheck
  Exch $0 ;second versionnumber
  Exch
  Exch $1 ;first versionnumber
  Push $R0 ;counter for $0
  Push $R1 ;counter for $1
  Push $3 ;temp char
  Push $4 ;temp string for $0
  Push $5 ;temp string for $1
  StrCpy $R0 "-1"
  StrCpy $R1 "-1"
  Start:
  StrCpy $4 ""
  DotLoop0:
  IntOp $R0 $R0 + 1
  StrCpy $3 $0 1 $R0
  StrCmp $3 "" DotFound0
  StrCmp $3 "." DotFound0
  StrCpy $4 $4$3
  Goto DotLoop0
  DotFound0:
  StrCpy $5 ""
  DotLoop1:
  IntOp $R1 $R1 + 1
  StrCpy $3 $1 1 $R1
  StrCmp $3 "" DotFound1
  StrCmp $3 "." DotFound1
  StrCpy $5 $5$3
  Goto DotLoop1
  DotFound1:
  Strcmp $4 "" 0 Not4
    StrCmp $5 "" Equal
    Goto Ver2Less
  Not4:
  StrCmp $5 "" Ver2More
  IntCmp $4 $5 Start Ver2Less Ver2More
  Equal:
  StrCpy $0 "0"
  Goto Finish
  Ver2Less:
  StrCpy $0 "1"
  Goto Finish
  Ver2More:
  StrCpy $0 "2"
  Finish:
  Pop $5
  Pop $4
  Pop $3
  Pop $R1
  Pop $R0
  Pop $1
  Exch $0
FunctionEnd


Section "sqlserver_setup" SEC0001
	;检查数据库是否存在
  ;//判断sqlserver是否安装的标准是是否在去 "添加/删除页面中能看到sqlserver"，也就是去注册表中查看
	; HKLM  SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Microsoft SQL Server 2000
  		;读取注册表

		StrCpy $R0 "noexist" ;设置字符串等于空
		StrCpy $0 0
		loop:
		  EnumRegKey $1 HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall" $0 ;$1返回的是查询到的值
		  StrCmp $1 "" done ;如果等于空 表示查询完毕了
		  IntOp $0 $0 + 1 ; $0 $0 + 1 ;表示一个序号而已
			StrCmp $1 "Microsoft SQL Server 2000" existingSqlService loop
		done:

  StrCmp $1 "Microsoft SQL Server 2000" existingSqlService NoextingSqlService


  NoextingSqlService:

	;删除注册表

 	;删除key ;如果下面有value的时候不要删除，需要另外的参数

  DeleteRegKey HKLM "SOFTWARE\Microsoft\Microsoft SQL Server"
  DeleteRegKey HKLM "SOFTWARE\Microsoft\MSSQLServer"
	DeleteRegKey HKLM "SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Microsoft SQL Server 2000"

	DeleteRegKey HKLM "SYSTEM\CurrentControlSet\Services\MSSQLSERVER"
	DeleteRegKey HKLM "SYSTEM\CurrentControlSet\Services\SQLSERVERAGENT"
	DeleteRegKey HKLM "SYSTEM\CurrentControlSet\Services\MSSQLSERVERADHELPER"

	DeleteRegKey HKCU "Software\Microsoft\Microsoft SQL Server"


	;删除value
  DeleteRegValue HKLM "SYSTEM\CurrentControlSet\Control\Session Manager" "PendingFileRenameOperations"



	;关闭进程  cnfgsvr.exe  因为这个服务总是在运行，所以不能删除文件夹

	;cnfgsvr.exe
 	StrCpy $0 "cnfgsvr.exe"
   DetailPrint "Searching for processes called '$0'"
   KillProc::FindProcesses
   StrCmp $1 "-1" wooops
   DetailPrint "-> Found $0 processes"

   StrCmp $0 "0" completed
   Sleep 1500

   StrCpy $0 "cnfgsvr.exe"
   DetailPrint "Killing all processes called '$0'"
   KillProc::KillProcesses
   StrCmp $1 "-1" wooops
   DetailPrint "-> Killed $0 processes, failed to kill $1 processes"

   Goto completed

   wooops:
   DetailPrint "-> Error: Something went wrong :-("
   Abort

   completed:
   DetailPrint "Everything went okay :-D"

	 ;关闭企业管理器
	 StrCpy $0 "mmc.exe"
	 DetailPrint "Searching for processes called '$0'"
   KillProc::FindProcesses
   StrCmp $1 "-1" wooops1
   DetailPrint "-> Found $0 processes"

   StrCmp $0 "0" completed1
   Sleep 1500

   StrCpy $0 "mmc.exe"
   DetailPrint "Killing all processes called '$0'"
   KillProc::KillProcesses
   StrCmp $1 "-1" wooops1
   DetailPrint "-> Killed $0 processes, failed to kill $1 processes"

   Goto completed1

   wooops1:
   DetailPrint "-> Error: Something went wrong :-("
   Abort

   completed1:
   DetailPrint "Everything went okay :-D"
	 ;关闭查询分析器
	 	 StrCpy $0 "isqlw.exe"
	 DetailPrint "Searching for processes called '$0'"
   KillProc::FindProcesses
   StrCmp $1 "-1" wooops2
   DetailPrint "-> Found $0 processes"

   StrCmp $0 "0" completed2
   Sleep 1500

   StrCpy $0 "isqlw.exe"
   DetailPrint "Killing all processes called '$0'"
   KillProc::KillProcesses
   StrCmp $1 "-1" wooops2
   DetailPrint "-> Killed $0 processes, failed to kill $1 processes"

   Goto completed2

   wooops2:
   DetailPrint "-> Error: Something went wrong :-("
   Abort

   completed2:
   DetailPrint "Everything went okay :-D"
	 ;关闭服务管理器
   	 	 StrCpy $0 "sqlmangr.exe"
	 DetailPrint "Searching for processes called '$0'"
   KillProc::FindProcesses
   StrCmp $1 "-1" wooops3
   DetailPrint "-> Found $0 processes"

   StrCmp $0 "0" completed3
   Sleep 1500

   StrCpy $0 "sqlmangr.exe"
   DetailPrint "Killing all processes called '$0'"
   KillProc::KillProcesses
   StrCmp $1 "-1" wooops3
   DetailPrint "-> Killed $0 processes, failed to kill $1 processes"

   Goto completed3

   wooops3:
   DetailPrint "-> Error: Something went wrong :-("
   Abort

   completed3:
   DetailPrint "Everything went okay :-D"



		;停止服务
		SimpleSC::StopService "MSSQLSERVER" 1 30
  	SimpleSC::StopService "SQLSERVERAGENT" 1 30
		;删除服务
  	SimpleSC::RemoveService "MSSQLSERVER"
  	SimpleSC::RemoveService "SQLSERVERAGENT"
		SimpleSC::RemoveService "mssqlserveradHelper"

	;删除文件
  ;Delete "$PROGRAMFILES\Microsoft SQL Server\data.txt"
	;删除文件夹
	RMDir /r "$PROGRAMFILES\Microsoft SQL Server"  ;Microsoft SQL Server文件夹 以及其下的所有文件和文件夹都会被删除



	;------------安装sqlserver Personal-------------------------------
	;sqlserver
  SetOutPath "$INSTDIR\sqlserver\PERSONAL\"
  SetOverwrite on
	File /r "C:\appdisk\eis\sqlserver\PERSONAL\*.*" ;提取指定目录中的文件到setup.exe中
  DetailPrint "正在安装SqlServer[约5分钟]"
  nsExec::ExecToLog   "mySetup.bat" ;安装sql的批处理
  DetailPrint "SqlServer安装完毕"

	;用空密码进行安装
	SetOutPath "$INSTDIR\tomcat\webapps\"
	Delete "password.txt" ;上面已经设置了当前页面
	nsislog::log "$INSTDIR\tomcat\webapps\password.txt" "" ;记录一个空密码


  ;删除value
  DeleteRegValue HKLM "SYSTEM\CurrentControlSet\Control\Session Manager" "PendingFileRenameOperations"
	;安装数据库补丁sp4
  SetOutPath "$INSTDIR\sqlserver\SQL2KSP4\"
  SetOverwrite on
	File /r "C:\appdisk\eis\sqlserver\SQL2KSP4\*.*" ;提取指定目录中的文件到setup.exe中
  DetailPrint "正在安装sp4补丁[约5分钟]"
  nsExec::ExecToLog   "mySetup.bat" ;安装sql的批处理
  DetailPrint "sp4补丁安装完毕"
	Goto noRuning1

  ;------------安装sqlserver Personal end--------------------------------------------------

  ;是否安装数据库
	;如果选择不安装，请输入数据库ip，用户名,密码，测试连接成功[以后实现，现在只考虑本机数据的情况]
  ;默认安装的数据库密码为空，安装后提示以下，后面要输入的。


	;服务存在的话启动数据库
	existingSqlService:
	StrCpy $R0 "exist"

  DetailPrint  "数据库服务已经存在"
	;检查服务状态
	;如果服务没有启动 则启动
	SimpleSC::GetServiceStatus "MSSQLSERVER"
  Pop $1
  IntCmp $1 4 isRuning noRuning1 noRuning2

  noRuning1:
  noRuning2:
  DetailPrint "正在启动数据库服务"
  SimpleSC::StartService "MSSQLSERVER" "" 30
  Pop $0
  IntCmp $0 0 runOver
  runOver:
  DetailPrint "数据库服务已经启动"
  Goto  startOver
  isRuning:
  DetailPrint "数据库服务已经启动"
  startOver:

  ExecWait '"$INSTDIR\tomcat\update.exe"'
  ;Delete "$INSTDIR\webapps\password.txt";不用删除这个文件，
	;因为既然hibernate的配置文件都可以明文写，那么这个也可以


SectionEnd



;--------------------------附加数据库操作-------------------------
Section "sqlserver_fetchDb" SEC0002

  DetailPrint $INSTDIR程序路径
	;如果是程序安装的
	 ;弹出对话框，请输入用户名(sa)和密码

	StrCmp $R0 "exist" shuruMima  MimaKong


  shuruMima:
	Loop:

	Dialogs::InputBox "输入数据库连接信息" "请输入密码:" "OK" "Cancel" "1" ${VAR_5}

	;记录已经安装了的sql的密码
	SetOutPath "$INSTDIR\tomcat\webapps\"
	Delete "password.txt" ;上面已经设置了当前文件夹
	nsislog::log "$INSTDIR\tomcat\webapps\password.txt" "$5" ;记录一个空密码
	ExecWait '"$INSTDIR\tomcat\update.exe"'

	;连接数据库
	${OLEDB}::SQL_Logon  "$R2"  "sa" "$5" ;"0" Success, "1" Failure

	;查询
	Pop $0
	DetailPrint $0连接结果
	;判断是否等于0，如果等于0就是登陆失败
	StrCmp $0 "0" OK WRONG

	;Is wrong!
	WRONG:
	Messagebox MB_YESNO|MB_ICONSTOP "密码错误. $\r$\n请重试" IDYES Loop
	;Is correct!
  goto Exit
	OK:
	Messagebox MB_OK|MB_ICONINFORMATION "连接数据库成功，开始附加数据库"
	;开始附加数据库
	Goto  attchdbSection

  MimaKong:
  ;连接数据库
	${OLEDB}::SQL_Logon  "$R2" "sa" "" ;"0" Success, "1" Failure
  ;Messagebox MB_OK|MB_ICONINFORMATION "连接数据库成功，开始附加数据库"
  	;查询
	Pop $0
	DetailPrint $0连接结果
	;判断是否等于0，如果等于0就是登陆失败
	StrCmp $0 "0" OK1 WRONG1

	;Is wrong!
	WRONG1:
	Messagebox MB_OK|MB_ICONSTOP "sa/'',登陆失败"
	;Is correct!
  goto Exit
	OK1:
	Messagebox MB_OK|MB_ICONINFORMATION "sa/''连接数据库成功，开始附加数据库"
	;开始附加数据库

	attchdbSection:
 	SetOutPath "$INSTDIR\DataBase\"

	;首先附加bea
	;检查有没有bea数据库，如果有先分离，然后附加。
  ${OLEDB}::SQL_Execute   "select name from  sysdatabases where  name='bea'" ;执行sql语句
	Pop $0
	DetailPrint $0查询数据库结果

	${OLEDB}::SQL_GetRow ;取得的执行的sql的返回结果  "0" Success, "1" Failure, "2" No more data to read
	Pop $0
	DetailPrint $0查询数据库bea结果data1
	Pop $0
	DetailPrint $0查询数据库bea结果data2

	;DetailPrint $0 ;只要大于0就是错误；如果错误，就比表示数据库bea不存在

	;==1的时候是失败的情况，没有数据库，否则(0)数据库已经存在   = [!=]
	StrCmp $0 'bea' existingDBBEA attachDBBEA

	existingDBBEA:
	DetailPrint "数据库bea已经存在"
  ;如果bea存在，先分离掉，然后附加新的。
  ${OLEDB}::SQL_Execute "EXEC sp_detach_db 'bea'"
	Pop $0
	DetailPrint $0执行分离数据库操作
  IntCmp $0 0 success  fail
	success:
	DetailPrint  "分离成功！"
	Goto fenliBEAdown
	fail:
	DetailPrint  "分离bea失败！"
	fenliBEAdown:

  attachDBBEA:
  ClearErrors

	DetailPrint "$INSTDIR" ;调试变量
	;;;;附加bea数据库
	DetailPrint "正在附加数据库bea..."
  File  "C:\appdisk\eis\DataBase\bea_Data.MDF"
  File  "C:\appdisk\eis\DataBase\bea_Log.LDF"

	${OLEDB}::SQL_Execute   "exec sp_attach_db @dbname = 'bea', @filename1 = N'$INSTDIR\DataBase\bea_Data.MDF',@filename2=N'$INSTDIR\DataBase\bea_Log.LDF'"
	Pop $0
	DetailPrint $0附加数据库bea结果

  StrCmp $0 '0' attchBEASuccess attchBEAFail
  attchBEASuccess:
  DetailPrint "附加数据库bea完成..."
	Goto doneBEA

	attchBEAFail:
  DetailPrint "附加数据库bea失败..."


	doneBEA:
	;---------------------------bea数据库附加完毕-----------------------------------------------------


	;---------------------------------------------------------------------------------
	;----------开始处理pri数据库
	${OLEDB}::SQL_Execute   "select name from  sysdatabases where  name='pri'" ;执行sql语句
	Pop $0
	DetailPrint $0

	${OLEDB}::SQL_GetRow ;去的执行的sql的返回结果  "0" Success, "1" Failure, "2" No more data to read
	Pop $0
	DetailPrint $0查询数据库pri结果data1
	Pop $0
	DetailPrint $0查询数据库pri结果data2

	;DetailPrint $0 ;只要大于0就是错误；如果错误，就比表示数据库bea不存在

	;==1的时候是失败的情况，没有数据库，否则(0)数据库已经存在   = [!=]
	StrCmp $0 'pri' existingDBPRI attachDBPRI

	existingDBPRI:
	DetailPrint "数据库pri已经存在"
	;Goto donePRI ;如果pri已经存在了的话 就先分离旧的，再附加新的
  ${OLEDB}::SQL_Execute "EXEC sp_detach_db 'pri'"
	Pop $0
	DetailPrint $0
	IntCmp $0 0 successPRI  failPRI
	successPRI:
	DetailPrint  "分离pri成功！"
	Goto fenliPRIdown
	failPRI:
	DetailPrint  "分离pri失败！"
	fenliPRIdown:

	attachDBPRI:

	;;;;附加PRI数据库
	DetailPrint "正在附加数据库pri..."

	File  "C:\appdisk\eis\DataBase\pri_Data.MDF"
  File  "C:\appdisk\eis\DataBase\pri_Log.LDF"
  
	${OLEDB}::SQL_Execute   "exec sp_attach_db @dbname = 'pri', @filename1 = N'$INSTDIR\DataBase\pri_Data.MDF',@filename2=N'$INSTDIR\DataBase\pri_Log.LDF'"
	Pop $0
	DetailPrint $0

  StrCmp $0 '0' attchPRISuccess attchPRIFail
  attchPRISuccess:
  DetailPrint "附加数据库pri完成..."
	Goto donePRI

	attchPRIFail:
  DetailPrint "附加数据库pri失败..."


	Goto donePRI
	donePRI:

	Goto  fetchEnd


  ;---------------------------pri数据库附加完毕-----------------------------------------------------

  ;Quit the installer:
	Exit:
	Quit

	fetchEnd:

SectionEnd




;//创建快捷方式

Section -AdditionalIcons
  WriteIniStr "$INSTDIR\${PRODUCT_NAME}.url" "InternetShortcut" "URL" "${PRODUCT_WEB_SITE}"
  CreateDirectory "$SMPROGRAMS\美联美容连锁软件"
  SetOutPath   "$INSTDIR\tomcat\bin\"
  CreateShortCut "$SMPROGRAMS\美联美容连锁软件\Tomcat.lnk" "$INSTDIR\tomcat\bin\startup.bat"
  SetOutPath   "$INSTDIR"
  CreateShortCut "$SMPROGRAMS\美联美容连锁软件\Uninstall.lnk" "$INSTDIR\uninst.exe"
SectionEnd


;//写入注册表系统信息
Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd

;//安装完毕，提示重启系统
/**
Section "overInstall" SEC10
  MessageBox MB_YESNO|MB_ICONQUESTION "系统已安装完成，需要重新启动系统才能正常使用该系统。重新启动吗？" IDNO +2
  Reboot
SectionEnd
*/

;;///////////    以下是卸载信息   /////////////////////////
;//confirm 1
Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK "$(^Name) 已成功地从你的计算机移除。"
FunctionEnd

;//confirm 2
Function un.onInit
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 "你确实要完全移除 $(^Name) ，其及所有的组件？ 移除后，所有数据和文件都将删除。$\r$\n 请确认是否进行该操作？" IDYES +2

Abort

FunctionEnd





Section "un.tomcat" USEC02
  SetOutPath "$INSTDIR\tomcat\bin"

  ;卸载tomcat服务
  ;ExecWait "service.bat remove hztomcat";不用卸载服务，因为没有安装服务

  ;删除文件夹
  SetOutPath "$INSTDIR"
  RMDir /r "$INSTDIR\tomcat"

SectionEnd




Section "un.sqlserver" USEC04
  ;删除sqlserver的安装包；并不是卸载sqlserver
  SetOutPath "$INSTDIR"
  RMDir /r "$INSTDIR\sqlserver"
SectionEnd


;//删除快捷方式
Section Uninstall
  Delete "$INSTDIR\${PRODUCT_NAME}.url"
  Delete "$INSTDIR\uninst.exe"

  Delete "$SMPROGRAMS\美联美容连锁软件\Uninstall.lnk"
  Delete "$SMPROGRAMS\美联美容连锁软件\Tomcat.lnk"

  RMDir /r  "$SMPROGRAMS\美联美容连锁软件"

  SetOutPath "c:\"
  RMDir "$INSTDIR"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  SetAutoClose true
  
SectionEnd


